{"version":3,"sources":["components/Label/index.js","components/ProgressBar/index.js","components/TextInput/index.js","docs/examples/EyeIcon/Example.js","components/EyeIcon/index.js","docs/examples/HelloWorld/ExampleHelloWorld.js","docs/examples/Label/ExampleOptional.js","docs/examples/Label/ExampleRequired.js","docs/examples/PasswordInput/ExampleAllFeatures.js","components/PasswordInput/index.js","docs/examples/PersonIcon/Example.js","docs/examples/ProgressBar/Example100Percent.js","docs/examples/ProgressBar/Example10Percent.js","docs/examples/ProgressBar/Example70Percent.js","docs/examples/RegistrationForm/ExampleRegistrationForm.js","docs/examples/SelectInput/Example.js","docs/examples/TextInput/ExampleError.js","docs/examples/TextInput/ExampleOptional.js","index.js","reportWebVitals.js","docs/Docs.js","docs/Navigation.js","docs/ComponentPage.js","docs/Example.js","docs/CodeExample.js","prism.js","docs/examples sync /^/.//.*$","components/EyeIcon/EyeIcon.js","components/HelloWorld/index.js","components/HelloWorld/HelloWorld.js","components/Label/Label.js","components/PasswordInput/PasswordInput.js","components/ProgressBar/ProgressBar.js","components/TextInput/TextInput.js","components/PersonIcon/index.js","components/PersonIcon/PersonIcon.js","components/RegistrationForm/index.js","components/RegistrationForm/RegistrationForm.js","components/SelectInput/index.js","components/SelectInput/SelectInput.js","docs/Props.js","../config/componentData.js"],"names":["message","htmlFor","label","required","props","state","password","length","this","htmlId","name","onChange","event","setState","target","value","minLength","placeholder","showVisibilityToggle","quality","getQuality","React","Component","percent","width","height","ExampleRegistrationForm","onSubmit","user","console","log","Example","error","selectField","defaultOption","options","text","ExampleError","ExampleOptional","ReactDOM","render","document","getElementById","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Docs","route","window","location","hash","substr","addEventListener","component","componentData","filter","components","map","className","href","description","examples","example","componentName","code","toggleCode","preventDefault","prevState","showCode","ExampleComponent","require","onClick","CodeExample","ref","element","PrismCode","children","_self","WorkerGlobalScope","self","Prism","e","t","n","manual","util","encode","a","type","content","alias","replace","Object","prototype","toString","call","match","objId","__id","defineProperty","clone","r","hasOwnProperty","languages","extend","insertBefore","i","arguments","l","o","s","DFS","plugins","highlightAll","callback","selector","hooks","run","elements","querySelectorAll","highlightElement","test","parentNode","toLowerCase","nodeName","u","language","grammar","textContent","Worker","g","filename","onmessage","highlightedCode","data","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","tokenize","matchGrammar","Token","c","h","f","inside","d","lookbehind","m","greedy","p","y","pattern","global","v","RegExp","source","b","k","w","lastIndex","P","_","exec","A","index","j","x","O","S","slice","N","C","E","push","L","Array","splice","apply","rest","all","add","join","tag","classes","attributes","parent","spellcheck","keys","parse","close","currentScript","getElementsByTagName","pop","src","hasAttribute","readyState","requestAnimationFrame","setTimeout","module","exports","markup","comment","prolog","doctype","cdata","punctuation","namespace","entity","title","xml","html","mathml","svg","clike","string","keyword","number","operator","javascript","regex","interpolation","script","js","jsx","spread","webpackContext","req","id","webpackContextResolve","__webpack_require__","Error","resolve","xmlns","viewBox","transform","fill","cx","cy","HelloWorld","defaultProps","style","display","color","PasswordInput","toggleShowPassword","showPassword","maxLength","marginLeft","ProgressBar","getColor","getWidthAsPercentOfTotalWidth","parseInt","border","backgroundColor","wrapperClass","concat","RegistrationForm","validate","submitted","email","errors","minPasswordLength","getOwnPropertyNames","confirmationMessage","passwordQuality","option","key","defaultValue"],"mappings":"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","file":"static/js/main.c2bc9f48.chunk.js","sourcesContent":["export {default} from './Label';\n","export { default } from './ProgressBar.js';\n","export { default } from './TextInput';\n","import React from 'react';\nimport EyeIcon from 'reactjs-lib/EyeIcon';\n\nexport default function EyeIconExample() {\n  return <EyeIcon />;\n}\n","export {default} from './EyeIcon';\n","import React from 'react';\nimport HelloWorld from 'reactjs-lib/HelloWorld';\n\n/** Custom message */\nexport default function ExampleHelloWorld() {\n  return <HelloWorld message=\"React Component Library!\" />\n}\n","import React from 'react';\nimport Label from 'reactjs-lib/Label';\n\n/** Optional label */\nexport default function ExampleOptional() {\n  return <Label htmlFor=\"test\" label=\"test\" />\n}\n","import React from 'react';\nimport Label from 'reactjs-lib/Label';\n\n/** Required label */\nexport default function ExampleRequired() {\n  return <Label htmlFor=\"test\" label=\"test\" required />\n}\n","import React from 'react';\nimport PasswordInput from 'reactjs-lib/PasswordInput';\n\n/** All features enabled */\nclass ExampleAllFeatures extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      password: ''\n    };\n  }\n\n  getQuality() {\n    const length = this.state.password.length;\n    return length > 10 ? 100 : length * 10;\n  }\n\n  render() {\n    return (\n      <div>\n        <PasswordInput\n          htmlId=\"password-input-example-all-features\"\n          name=\"password\"\n          onChange={event => this.setState({ password: event.target.value })}\n          value={this.state.password}\n          minLength={8}\n          placeholder=\"Enter password\"\n          showVisibilityToggle\n          quality={this.getQuality()}\n          {...this.props} />\n      </div>\n    )\n  }\n}\n\nexport default ExampleAllFeatures;\n","export {default} from './PasswordInput';\n","import React from 'react';\nimport PersonIcon from 'reactjs-lib/PersonIcon';\n\nexport default function PersonIconExample() {\n  return <PersonIcon />;\n}\n","import React from 'react';\nimport ProgressBar from 'reactjs-lib/ProgressBar';\n\n/** 100% progress and height 20px */\nexport default function Example100Percent() {\n  return <ProgressBar percent={100} width={150} height={20} />\n}\n","import React from 'react';\nimport ProgressBar from 'reactjs-lib/ProgressBar';\n\n/** 10% progress */\nexport default function Example10Percent() {\n  return <ProgressBar percent={10} width={150} />\n}\n","import React from 'react';\nimport ProgressBar from 'reactjs-lib/ProgressBar';\n\n/** 70% progress */\nexport default function Example70Percent() {\n  return <ProgressBar percent={70} width={150} />\n}\n","import React from 'react';\nimport RegistrationForm from 'reactjs-lib/RegistrationForm';\n\nexport default class ExampleRegistrationForm extends React.Component {\n  onSubmit = (user) => {\n    console.log(user);\n  }\n\n  render() {\n    return <RegistrationForm onSubmit={this.onSubmit} />\n  }\n}\n","import React from 'react';\nimport SelectInput from 'reactjs-lib/SelectInput';\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        selectField: ''\n      },\n      error: 'Select Field is required!',\n    };\n  }\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      ...this.state,\n      user: { ...this.state.user, [name]: value },\n      error: null\n    });\n  }\n\n  render() {\n    console.log(this.state.user);\n    return (\n      <SelectInput\n        name=\"selectField\"\n        label=\"Select Field\"\n        value={this.state.user.selectField}\n        defaultOption=\"Select Option\"\n        options={\n          [\n            {\n              value: 'option1',\n              text: 'option 1'\n            },\n            {\n              value: 'option2',\n              text: 'option 2'\n            },\n            {\n              value: 'option3',\n              text: 'option 3'\n            },\n          ]}\n        onChange={this.onChange}\n        error={this.state.error}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport TextInput from 'reactjs-lib/TextInput';\n\n/** Required TextBox with error */\nexport default class ExampleError extends React.Component {\n  render() {\n    return (\n      <TextInput\n        htmlId=\"example-optional\"\n        label=\"First Name\"\n        name=\"firstname\"\n        onChange={() => { }}\n        required\n        error=\"First name is required.\"\n      />\n    )\n  }\n}\n","import React from 'react';\nimport TextInput from 'reactjs-lib/TextInput';\n\n/** Optional TextBox */\nexport default class ExampleOptional extends React.Component {\n  render() {\n    return (\n      <TextInput\n        htmlId=\"example-optional\"\n        label=\"First Name\"\n        name=\"firstname\"\n        onChange={() => { }}\n      />\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Docs from './docs/Docs';\n\nReactDOM.render(<Docs />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport ComponentPage from './ComponentPage';\nimport componentData from '../../config/componentData';\n\nexport default class Docs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: window.location.hash.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      this.setState({ route: window.location.hash.substr(1) })\n    })\n  }\n\n  render() {\n    const { route } = this.state;\n    const component = route ? componentData.filter(component => component.name === route)[0] : componentData[0];\n\n    return (\n      <div>\n        <Navigation components={componentData.map(component => component.name)} />\n        <ComponentPage component={component} />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({ components }) => {\n  return (\n    <ul className=\"navigation\">\n      {\n        components.map(name => {\n          return (\n            <li key={name}>\n              <a href={`#${name}`}>{name}</a>\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n}\n\nNavigation.propTypes = {\n  components: PropTypes.array.isRequired\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Example from './Example';\nimport Props from './Props';\n\nconst ComponentPage = ({ component }) => {\n  const { name, description, props, examples } = component;\n\n  return (\n    <div className=\"componentpage\">\n      <h2>{name}</h2>\n      <p>{description}</p>\n\n      <h3>Example{examples.length > 1 && \"s\"}</h3>\n      {\n        examples.length > 0 ?\n          examples.map(example => <Example key={example.code} example={example} componentName={name} />) :\n          \"No examples exist.\"\n      }\n\n      <h3>Props</h3>\n      {\n        props ?\n          <Props props={props} /> :\n          \"This component accepts no props.\"\n      }\n    </div>\n  )\n};\n\nComponentPage.propTypes = {\n  component: PropTypes.object.isRequired\n};\n\nexport default ComponentPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeExample from './CodeExample';\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n  }\n\n  toggleCode = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return { showCode: !prevState.showCode };\n    });\n  }\n\n  render() {\n    const { showCode } = this.state;\n    const { code, description, name } = this.props.example;\n    // Must use CommonJS require to dynamically require because ES Modules must be statically analyzable.\n    const ExampleComponent = require(`./examples/${this.props.componentName}/${name}`).default;\n    return (\n      <div className=\"example\">\n        {description && <h4>{description}</h4>}\n\n        <ExampleComponent />\n\n        <p>\n          <a href=\"\" onClick={this.toggleCode}>\n            {showCode ? \"Hide\" : \"Show\"} Code\n          </a>\n        </p>\n\n        {showCode && <CodeExample>{code}</CodeExample>}\n      </div>\n    )\n  }\n}\n\nExample.propTypes = {\n  example: PropTypes.object.isRequired,\n  componentName: PropTypes.string.isRequired\n}\n\nexport default Example;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../prism';\nimport { PrismCode } from \"react-prism\";\nimport 'prismjs/themes/prism-okaidia.css';\n\nclass CodeExample extends React.Component {\n  render() {\n    return (\n      <pre ref={ref => { this.element = ref }}>\n        <PrismCode className=\"language-jsx\">\n          {this.props.children}\n        </PrismCode>\n      </pre>\n    )\n  }\n}\n\nCodeExample.propTypes = {\n  children: PropTypes.string.isRequired\n}\n\nexport default CodeExample;\n","/* eslint-disable */\n/* http://prismjs.com/download.html?themes=prism-okaidia&languages=markup+clike+javascript+jsx */\nvar _self = \"undefined\" != typeof window ? window : \"undefined\" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {}, Prism = function () { var e = /\\blang(?:uage)?-(\\w+)\\b/i, t = 0, n = _self.Prism = { manual: _self.Prism && _self.Prism.manual, util: { encode: function (e) { return e instanceof a ? new a(e.type, n.util.encode(e.content), e.alias) : \"Array\" === n.util.type(e) ? e.map(n.util.encode) : e.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \") }, type: function (e) { return Object.prototype.toString.call(e).match(/\\[object (\\w+)\\]/)[1] }, objId: function (e) { return e.__id || Object.defineProperty(e, \"__id\", { value: ++t }), e.__id }, clone: function (e) { var t = n.util.type(e); switch (t) { case \"Object\": var a = {}; for (var r in e) e.hasOwnProperty(r) && (a[r] = n.util.clone(e[r])); return a; case \"Array\": return e.map && e.map(function (e) { return n.util.clone(e) }) }return e } }, languages: { extend: function (e, t) { var a = n.util.clone(n.languages[e]); for (var r in t) a[r] = t[r]; return a }, insertBefore: function (e, t, a, r) { r = r || n.languages; var i = r[e]; if (2 == arguments.length) { a = arguments[1]; for (var l in a) a.hasOwnProperty(l) && (i[l] = a[l]); return i } var o = {}; for (var s in i) if (i.hasOwnProperty(s)) { if (s == t) for (var l in a) a.hasOwnProperty(l) && (o[l] = a[l]); o[s] = i[s] } return n.languages.DFS(n.languages, function (t, n) { n === r[e] && t != e && (this[t] = o) }), r[e] = o }, DFS: function (e, t, a, r) { r = r || {}; for (var i in e) e.hasOwnProperty(i) && (t.call(e, i, e[i], a || i), \"Object\" !== n.util.type(e[i]) || r[n.util.objId(e[i])] ? \"Array\" !== n.util.type(e[i]) || r[n.util.objId(e[i])] || (r[n.util.objId(e[i])] = !0, n.languages.DFS(e[i], t, i, r)) : (r[n.util.objId(e[i])] = !0, n.languages.DFS(e[i], t, null, r))) } }, plugins: {}, highlightAll: function (e, t) { var a = { callback: t, selector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code' }; n.hooks.run(\"before-highlightall\", a); for (var r, i = a.elements || document.querySelectorAll(a.selector), l = 0; r = i[l++];)n.highlightElement(r, e === !0, a.callback) }, highlightElement: function (t, a, r) { for (var i, l, o = t; o && !e.test(o.className);)o = o.parentNode; o && (i = (o.className.match(e) || [, \"\"])[1].toLowerCase(), l = n.languages[i]), t.className = t.className.replace(e, \"\").replace(/\\s+/g, \" \") + \" language-\" + i, o = t.parentNode, /pre/i.test(o.nodeName) && (o.className = o.className.replace(e, \"\").replace(/\\s+/g, \" \") + \" language-\" + i); var s = t.textContent, u = { element: t, language: i, grammar: l, code: s }; if (n.hooks.run(\"before-sanity-check\", u), !u.code || !u.grammar) return u.code && (n.hooks.run(\"before-highlight\", u), u.element.textContent = u.code, n.hooks.run(\"after-highlight\", u)), n.hooks.run(\"complete\", u), void 0; if (n.hooks.run(\"before-highlight\", u), a && _self.Worker) { var g = new Worker(n.filename); g.onmessage = function (e) { u.highlightedCode = e.data, n.hooks.run(\"before-insert\", u), u.element.innerHTML = u.highlightedCode, r && r.call(u.element), n.hooks.run(\"after-highlight\", u), n.hooks.run(\"complete\", u) }, g.postMessage(JSON.stringify({ language: u.language, code: u.code, immediateClose: !0 })) } else u.highlightedCode = n.highlight(u.code, u.grammar, u.language), n.hooks.run(\"before-insert\", u), u.element.innerHTML = u.highlightedCode, r && r.call(t), n.hooks.run(\"after-highlight\", u), n.hooks.run(\"complete\", u) }, highlight: function (e, t, r) { var i = n.tokenize(e, t); return a.stringify(n.util.encode(i), r) }, matchGrammar: function (e, t, a, r, i, l, o) { var s = n.Token; for (var u in a) if (a.hasOwnProperty(u) && a[u]) { if (u == o) return; var g = a[u]; g = \"Array\" === n.util.type(g) ? g : [g]; for (var c = 0; c < g.length; ++c) { var h = g[c], f = h.inside, d = !!h.lookbehind, m = !!h.greedy, p = 0, y = h.alias; if (m && !h.pattern.global) { var v = h.pattern.toString().match(/[imuy]*$/)[0]; h.pattern = RegExp(h.pattern.source, v + \"g\") } h = h.pattern || h; for (var b = r, k = i; b < t.length; k += t[b].length, ++b) { var w = t[b]; if (t.length > e.length) return; if (!(w instanceof s)) { h.lastIndex = 0; var _ = h.exec(w), P = 1; if (!_ && m && b != t.length - 1) { if (h.lastIndex = k, _ = h.exec(e), !_) break; for (var A = _.index + (d ? _[1].length : 0), j = _.index + _[0].length, x = b, O = k, S = t.length; S > x && (j > O || !t[x].type && !t[x - 1].greedy); ++x)O += t[x].length, A >= O && (++b, k = O); if (t[b] instanceof s || t[x - 1].greedy) continue; P = x - b, w = e.slice(k, O), _.index -= k } if (_) { d && (p = _[1].length); var A = _.index + p, _ = _[0].slice(p), j = A + _.length, N = w.slice(0, A), C = w.slice(j), E = [b, P]; N && (++b, k += N.length, E.push(N)); var L = new s(u, f ? n.tokenize(_, f) : _, y, _, m); if (E.push(L), C && E.push(C), Array.prototype.splice.apply(t, E), 1 != P && n.matchGrammar(e, t, a, b, k, !0, u), l) break } else if (l) break } } } } }, tokenize: function (e, t) { var a = [e], r = t.rest; if (r) { for (var i in r) t[i] = r[i]; delete t.rest } return n.matchGrammar(e, a, t, 0, 0, !1), a }, hooks: { all: {}, add: function (e, t) { var a = n.hooks.all; a[e] = a[e] || [], a[e].push(t) }, run: function (e, t) { var a = n.hooks.all[e]; if (a && a.length) for (var r, i = 0; r = a[i++];)r(t) } } }, a = n.Token = function (e, t, n, a, r) { this.type = e, this.content = t, this.alias = n, this.length = 0 | (a || \"\").length, this.greedy = !!r }; if (a.stringify = function (e, t, r) { if (\"string\" == typeof e) return e; if (\"Array\" === n.util.type(e)) return e.map(function (n) { return a.stringify(n, t, e) }).join(\"\"); var i = { type: e.type, content: a.stringify(e.content, t, r), tag: \"span\", classes: [\"token\", e.type], attributes: {}, language: t, parent: r }; if (\"comment\" == i.type && (i.attributes.spellcheck = \"true\"), e.alias) { var l = \"Array\" === n.util.type(e.alias) ? e.alias : [e.alias]; Array.prototype.push.apply(i.classes, l) } n.hooks.run(\"wrap\", i); var o = Object.keys(i.attributes).map(function (e) { return e + '=\"' + (i.attributes[e] || \"\").replace(/\"/g, \"&quot;\") + '\"' }).join(\" \"); return \"<\" + i.tag + ' class=\"' + i.classes.join(\" \") + '\"' + (o ? \" \" + o : \"\") + \">\" + i.content + \"</\" + i.tag + \">\" }, !_self.document) return _self.addEventListener ? (_self.addEventListener(\"message\", function (e) { var t = JSON.parse(e.data), a = t.language, r = t.code, i = t.immediateClose; _self.postMessage(n.highlight(r, n.languages[a], a)), i && _self.close() }, !1), _self.Prism) : _self.Prism; var r = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop(); return r && (n.filename = r.src, !document.addEventListener || n.manual || r.hasAttribute(\"data-manual\") || (\"loading\" !== document.readyState ? window.requestAnimationFrame ? window.requestAnimationFrame(n.highlightAll) : window.setTimeout(n.highlightAll, 16) : document.addEventListener(\"DOMContentLoaded\", n.highlightAll))), _self.Prism }(); \"undefined\" != typeof module && module.exports && (module.exports = Prism), \"undefined\" != typeof global && (global.Prism = Prism);\nPrism.languages.markup = { comment: /<!--[\\s\\S]*?-->/, prolog: /<\\?[\\s\\S]+?\\?>/, doctype: /<!DOCTYPE[\\s\\S]+?>/i, cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i, tag: { pattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\s\\S])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i, inside: { tag: { pattern: /^<\\/?[^\\s>\\/]+/i, inside: { punctuation: /^<\\/?/, namespace: /^[^\\s>\\/:]+:/ } }, \"attr-value\": { pattern: /=(?:('|\")[\\s\\S]*?(\\1)|[^\\s>]+)/i, inside: { punctuation: /[=>\"']/ } }, punctuation: /\\/?>/, \"attr-name\": { pattern: /[^\\s>\\/]+/, inside: { namespace: /^[^\\s>\\/:]+:/ } } } }, entity: /&#?[\\da-z]{1,8};/i }, Prism.hooks.add(\"wrap\", function (a) { \"entity\" === a.type && (a.attributes.title = a.content.replace(/&amp;/, \"&\")) }), Prism.languages.xml = Prism.languages.markup, Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup;\nPrism.languages.clike = { comment: [{ pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//, lookbehind: !0 }, { pattern: /(^|[^\\\\:])\\/\\/.*/, lookbehind: !0 }], string: { pattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, greedy: !0 }, \"class-name\": { pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i, lookbehind: !0, inside: { punctuation: /(\\.|\\\\)/ } }, keyword: /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/, \"boolean\": /\\b(true|false)\\b/, \"function\": /[a-z0-9_]+(?=\\()/i, number: /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i, operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/, punctuation: /[{}[\\];(),.:]/ };\nPrism.languages.javascript = Prism.languages.extend(\"clike\", { keyword: /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/, number: /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/, \"function\": /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i, operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/ }), Prism.languages.insertBefore(\"javascript\", \"keyword\", { regex: { pattern: /(^|[^\\/])\\/(?!\\/)(\\[.+?]|\\\\.|[^\\/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/, lookbehind: !0, greedy: !0 } }), Prism.languages.insertBefore(\"javascript\", \"string\", { \"template-string\": { pattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/, greedy: !0, inside: { interpolation: { pattern: /\\$\\{[^}]+\\}/, inside: { \"interpolation-punctuation\": { pattern: /^\\$\\{|\\}$/, alias: \"punctuation\" }, rest: Prism.languages.javascript } }, string: /[\\s\\S]+/ } } }), Prism.languages.markup && Prism.languages.insertBefore(\"markup\", \"tag\", { script: { pattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i, lookbehind: !0, inside: Prism.languages.javascript, alias: \"language-javascript\" } }), Prism.languages.js = Prism.languages.javascript;\n!function (a) { var e = a.util.clone(a.languages.javascript); a.languages.jsx = a.languages.extend(\"markup\", e), a.languages.jsx.tag.pattern = /<\\/?[\\w\\.:-]+\\s*(?:\\s+(?:[\\w\\.:-]+(?:=(?:(\"|')(\\\\?[\\s\\S])*?\\1|[^\\s'\">=]+|(\\{[\\s\\S]*?\\})))?|\\{\\.{3}\\w+\\})\\s*)*\\/?>/i, a.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:('|\")[\\s\\S]*?(\\1)|[^\\s>]+)/i, a.languages.insertBefore(\"inside\", \"attr-name\", { spread: { pattern: /\\{\\.{3}\\w+\\}/, inside: { punctuation: /\\{|\\}|\\./, \"attr-value\": /\\w+/ } } }, a.languages.jsx.tag); var s = a.util.clone(a.languages.jsx); delete s.punctuation, s = a.languages.insertBefore(\"jsx\", \"operator\", { punctuation: /=(?={)|[{}[\\];(),.:]/ }, { jsx: s }), a.languages.insertBefore(\"inside\", \"attr-value\", { script: { pattern: /=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i, inside: s, alias: \"language-javascript\" } }, a.languages.jsx.tag) }(Prism);\n","var map = {\n\t\"./EyeIcon/Example\": 14,\n\t\"./EyeIcon/Example.js\": 14,\n\t\"./HelloWorld/ExampleHelloWorld\": 16,\n\t\"./HelloWorld/ExampleHelloWorld.js\": 16,\n\t\"./Label/ExampleOptional\": 17,\n\t\"./Label/ExampleOptional.js\": 17,\n\t\"./Label/ExampleRequired\": 18,\n\t\"./Label/ExampleRequired.js\": 18,\n\t\"./PasswordInput/ExampleAllFeatures\": 19,\n\t\"./PasswordInput/ExampleAllFeatures.js\": 19,\n\t\"./PersonIcon/Example\": 21,\n\t\"./PersonIcon/Example.js\": 21,\n\t\"./ProgressBar/Example100Percent\": 22,\n\t\"./ProgressBar/Example100Percent.js\": 22,\n\t\"./ProgressBar/Example10Percent\": 23,\n\t\"./ProgressBar/Example10Percent.js\": 23,\n\t\"./ProgressBar/Example70Percent\": 24,\n\t\"./ProgressBar/Example70Percent.js\": 24,\n\t\"./RegistrationForm/ExampleRegistrationForm\": 25,\n\t\"./RegistrationForm/ExampleRegistrationForm.js\": 25,\n\t\"./SelectInput/Example\": 26,\n\t\"./SelectInput/Example.js\": 26,\n\t\"./TextInput/ExampleError\": 27,\n\t\"./TextInput/ExampleError.js\": 27,\n\t\"./TextInput/ExampleOptional\": 28,\n\t\"./TextInput/ExampleOptional.js\": 28\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 55;","import React from 'react';\n\n/** SVG Eye Icon */\nfunction EyeIcon() {\n  // Attribution: Fabián Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\n  return (\n    <svg width=\"32\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 22 22\">\n      <g transform=\"matrix(.02146 0 0 .02146 1 1)\" fill=\"#4d4d4d\">\n        <path d=\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\" />\n        <circle cx=\"466.08\" cy=\"466.02\" r=\"134.5\" />\n      </g>\n    </svg>\n  )\n}\n\nexport default EyeIcon;\n","export { default } from './HelloWorld';","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** A component that says Hello with a custom message. */\nfunction HelloWorld({ message }) {\n  return <div>Hello {message}</div>\n}\n\nHelloWorld.propTypes = {\n  /** Message to display */\n  message: PropTypes.string\n};\n\nHelloWorld.defaultProps = {\n  message: 'World'\n};\n\nexport default HelloWorld;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Label with required field display, htmlFor, and block styling */\nfunction Label({ htmlFor, label, required }) {\n  return (\n    <label style={{ display: 'block' }} htmlFor={htmlFor}>\n      {label} {required && <span style={{ color: 'red' }}> *</span>}\n    </label>\n  )\n}\n\nLabel.propTypes = {\n  /** HTML ID for associated input */\n  htmlFor: PropTypes.string.isRequired,\n\n  /** Label text */\n  label: PropTypes.string.isRequired,\n\n  /** Display asterisk after label if true */\n  required: PropTypes.bool\n};\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ProgressBar from '../ProgressBar';\nimport EyeIcon from '../EyeIcon';\nimport TextInput from '../TextInput';\n\n/** Password input with integrated label, quality tips, and show password toggle. */\nclass PasswordInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPassword: false\n    }\n  }\n\n  toggleShowPassword = event => {\n    this.setState(prevState => {\n      return { showPassword: !prevState.showPassword };\n    });\n    if (event) event.preventDefault();\n  }\n\n  render() {\n    const {\n      htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props\n    } = this.props;\n    const { showPassword } = this.state;\n\n    return (\n      <TextInput\n        htmlId={htmlId}\n        label={label}\n        placeholder={placeholder}\n        type={showPassword ? 'text' : 'password'}\n        onChange={onChange}\n        value={value}\n        maxLength={maxLength}\n        error={error}\n        required\n        {...props}>\n        {\n          showVisibilityToggle &&\n          <a\n            href=\"\"\n            onClick={this.toggleShowPassword}\n            style={{ marginLeft: 5 }}>\n            <EyeIcon />\n          </a>\n        }\n        {\n          value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\n        }\n      </TextInput>\n    );\n  }\n}\n\nPasswordInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string.isRequired,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\n  name: PropTypes.string.isRequired,\n\n  /** Password value */\n  value: PropTypes.any,\n\n  /** Input label */\n  label: PropTypes.string,\n\n  /** Function called when password input value changes */\n  onChange: PropTypes.func.isRequired,\n\n  /** Max password length accepted */\n  maxLength: PropTypes.number,\n\n  /** Placeholder displayed when no password is entered */\n  placeholder: PropTypes.string,\n\n  /** Set to true to show the toggle for displaying the currently entered password */\n  showVisibilityToggle: PropTypes.bool,\n\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\n  quality: PropTypes.number,\n\n  /** Validation error to display */\n  error: PropTypes.string\n};\n\nPasswordInput.defaultProps = {\n  maxLength: 50,\n  showVisibilityToggle: false,\n  label: 'Password'\n};\n\nexport default PasswordInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProgressBar extends React.Component {\n  getColor = (percent) => {\n    if (percent === 100) return 'green';\n    return percent > 50 ? 'lightgreen' : 'red';\n  }\n\n  getWidthAsPercentOfTotalWidth = () => {\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\n  }\n\n  render() {\n    const { percent, width, height } = this.props;\n    return (\n      <div style={{ border: 'solid 1px lightgray', width: width }}>\n        <div style={{\n          width: this.getWidthAsPercentOfTotalWidth(),\n          height,\n          backgroundColor: this.getColor(percent)\n        }} />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  /** Percent of progress completed */\n  percent: PropTypes.number.isRequired,\n\n  /** Bar width */\n  width: PropTypes.number.isRequired,\n\n  /** Bar height */\n  height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n  height: 5\n};\n\nexport default ProgressBar;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nconst TextInput = ({\n  htmlId, name, label, type = \"text\", required = false,\n  onChange, placeholder, value, error, children, ...props }) => {\n\n  let wrapperClass = \"form-group\";\n  if (error && error.length > 0) {\n    wrapperClass.concat(\" has-error\");\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <Label htmlFor={htmlId ? htmlId : name} label={label} required={required} />\n      <input\n        id={htmlId}\n        type={type}\n        name={name}\n        className=\"form-control\"\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        style={error && { border: 'solid 1px red' }}\n        {...props} />\n      {children}\n      {error && <div className=\"error\" style={{ color: 'red' }}>{error}</div>}\n    </div>\n  );\n};\n\nTextInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string,\n\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** Input label */\n  label: PropTypes.string.isRequired,\n\n  /** Input type */\n  type: PropTypes.oneOf(['text', 'number', 'password']),\n\n  /** Mark label with asterisk if set to true */\n  required: PropTypes.bool,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Placeholder to display when empty */\n  placeholder: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.any,\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** Child component to display next to the input */\n  children: PropTypes.node\n};\n\nexport default TextInput;\n","export { default } from './PersonIcon';","import React from 'react';\n\n/** SVG Person Icon */\nfunction PersonIcon() {\n  return (\n    <svg width=\"32\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n      <path\n        d=\"m17.466 16.914c-.159-.052-1.164-.505-.536-2.414h-.009c1.637-1.686 2.888-4.399 2.888-7.07 0-4.107-2.731-6.26-5.905-6.26-3.176 0-5.892 2.152-5.892 6.26 0 2.682 1.244 5.406 2.891 7.088.642 1.684-.506 2.309-.746 2.396-2.238.724-8.325 4.332-8.229 9.586h24.05c.107-5.02-4.708-8.279-8.513-9.586m19.943463-3.079141a23.455896 23.455898 0 0 1 -23.455894 23.455898 23.455896 23.455898 0 0 1 -23.455896 -23.455898 23.455896 23.455898 0 0 1 23.455896 -23.455898 23.455896 23.455898 0 0 1 23.455894 23.455898\"\n        fill=\"#4d4d4d\" transform=\"matrix(.34107 0 0 .34107 7.23 7.278)\" />\n    </svg>\n  )\n}\n\nexport default PersonIcon;\n","export {default} from './RegistrationForm';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextInput from '../TextInput';\nimport PasswordInput from '../PasswordInput';\n\n/** Registration form with built-in validation. */\nclass RegistrationForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        email: '',\n        password: ''\n      },\n      errors: {},\n      submitted: false,\n    };\n  }\n\n  onChange = (event) => {\n    const user = this.state.user;\n    user[event.target.name] = event.target.value;\n    this.setState({ user });\n  }\n\n  // Returns a number from 0 to 100 that represents password quality.\n  // For simplicity, just returning % of min length entered.\n  // Could enhance with checks for number, special char, unique characters, etc.\n  passwordQuality(password) {\n    if (!password) return null;\n    if (password.length >= this.props.minPasswordLength) return 100;\n    const percentOfMinLength = parseInt(password.length / this.props.minPasswordLength * 100, 10);\n    return percentOfMinLength;\n  }\n\n  validate({ email, password }) {\n    const errors = {};\n    const { minPasswordLength } = this.props;\n\n    if (!email) errors.email = 'Email required.';\n    if (password.length < minPasswordLength)\n      errors.password = `Password must be at least ${minPasswordLength} characters.`;\n\n    this.setState({ errors });\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\n    return formIsValid;\n  }\n\n  onSubmit = () => {\n    const { user } = this.state;\n    const formIsValid = this.validate(user);\n    if (formIsValid) {\n      this.props.onSubmit(user);\n      this.setState({ submitted: true });\n    }\n  }\n\n  render() {\n    const { errors, submitted } = this.state;\n    const { email, password } = this.state.user;\n\n    return (\n      submitted ?\n        <h2>{this.props.confirmationMessage}</h2> :\n        <div>\n          <TextInput\n            htmlId=\"registration-form-email\"\n            name=\"email\"\n            onChange={this.onChange}\n            label=\"Email\"\n            value={email}\n            error={errors.email}\n            required />\n\n          <PasswordInput\n            htmlId=\"registration-form-password\"\n            name=\"password\"\n            value={password}\n            onChange={this.onChange}\n            quality={this.passwordQuality(password)}\n            showVisibilityToggle\n            maxLength={50}\n            error={errors.password} />\n\n          <input type=\"submit\" value=\"Register\" onClick={this.onSubmit} />\n        </div>\n    )\n  }\n}\n\nRegistrationForm.propTypes = {\n  /** Message displayed upon successful submission */\n  confirmationMessage: PropTypes.string,\n\n  /** Called when form is submitted */\n  onSubmit: PropTypes.func.isRequired,\n\n  /** Minimum password length */\n  minPasswordLength: PropTypes.number\n}\n\nRegistrationForm.defaultProps = {\n  confirmationMessage: \"Thanks for registering!\",\n  minPasswordLength: 8\n};\n\nexport default RegistrationForm;\n","export { default } from './SelectInput';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label from '../Label';\n\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\nconst SelectInput = ({\n  htmlId, name, label, onChange, defaultOption, value, error, options }) => {\n  return (\n    <div className=\"form-group\">\n      <Label htmlFor={htmlId ? htmlId : name} label={label} />\n      <div className=\"field\">\n        <select\n          name={name}\n          onChange={onChange}\n          value={value}\n          className=\"form-control\"\n          style={error && { border: 'solid 1px red' }}>\n          <option value={\"\"}>{defaultOption}</option>\n          {options.map(option => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.text}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      {error && <div className=\"error\" style={{ color: 'red' }}>{error}</div>}\n    </div>\n  );\n};\n\nSelectInput.propTypes = {\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\n  htmlId: PropTypes.string,\n\n  /** Recommend setting this to match object's property so a single change handler can be used. */\n  name: PropTypes.string.isRequired,\n\n  /** label */\n  label: PropTypes.string.isRequired,\n\n  /** Function to call onChange */\n  onChange: PropTypes.func.isRequired,\n\n  /** Value */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** String to display when error occurs */\n  error: PropTypes.string,\n\n  /** options to display */\n  // options: PropTypes.arrayOf(PropTypes.object),\n  options: PropTypes.array.isRequired,\n\n  /** Default Value */\n  defaultOption: PropTypes.string,\n};\n\nexport default SelectInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Props = ({ props }) => {\n  return (\n    <table className=\"props\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Required</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          Object.keys(props).map(key => {\n            return (\n              <tr key={key}>\n                <td>{key}</td>\n                <td>{props[key].description}</td>\n                <td>{props[key].type.name}</td>\n                <td>{props[key].defaultValue && props[key].defaultValue.value}</td>\n                <td>{props[key].required && \"X\"}</td>\n              </tr>\n            );\n          })\n        }\n      </tbody>\n    </table>\n  )\n}\n\nProps.propTypes = {\n  props: PropTypes.object.isRequired\n};\n\nexport default Props;","module.exports = /* eslint-disable */ [{\"name\":\"EyeIcon\",\"description\":\"SVG Eye Icon\",\"code\":\"import React from 'react';\\n\\n/** SVG Eye Icon */\\nfunction EyeIcon() {\\n  // Attribution: Fabián Alexis at https://commons.wikimedia.org/wiki/File:Antu_view-preview.svg\\n  return (\\n    <svg width=\\\"32\\\" height=\\\"32\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 22 22\\\">\\n      <g transform=\\\"matrix(.02146 0 0 .02146 1 1)\\\" fill=\\\"#4d4d4d\\\">\\n        <path d=\\\"m466.07 161.53c-205.6 0-382.8 121.2-464.2 296.1-2.5 5.3-2.5 11.5 0 16.9 81.4 174.9 258.6 296.1 464.2 296.1 205.6 0 382.8-121.2 464.2-296.1 2.5-5.3 2.5-11.5 0-16.9-81.4-174.9-258.6-296.1-464.2-296.1m0 514.7c-116.1 0-210.1-94.1-210.1-210.1 0-116.1 94.1-210.1 210.1-210.1 116.1 0 210.1 94.1 210.1 210.1 0 116-94.1 210.1-210.1 210.1\\\" />\\n        <circle cx=\\\"466.08\\\" cy=\\\"466.02\\\" r=\\\"134.5\\\" />\\n      </g>\\n    </svg>\\n  )\\n}\\n\\nexport default EyeIcon;\\n\",\"examples\":[{\"name\":\"Example\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport EyeIcon from 'reactjs-lib/EyeIcon';\\n\\nexport default function EyeIconExample() {\\n  return <EyeIcon />;\\n}\\n\"}]},{\"name\":\"HelloWorld\",\"description\":\"A component that says Hello with a custom message.\",\"props\":{\"message\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Message to display\",\"defaultValue\":{\"value\":\"'World'\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** A component that says Hello with a custom message. */\\nfunction HelloWorld({ message }) {\\n  return <div>Hello {message}</div>\\n}\\n\\nHelloWorld.propTypes = {\\n  /** Message to display */\\n  message: PropTypes.string\\n};\\n\\nHelloWorld.defaultProps = {\\n  message: 'World'\\n};\\n\\nexport default HelloWorld;\",\"examples\":[{\"name\":\"ExampleHelloWorld\",\"description\":\"Custom message\",\"code\":\"import React from 'react';\\nimport HelloWorld from 'reactjs-lib/HelloWorld';\\n\\n/** Custom message */\\nexport default function ExampleHelloWorld() {\\n  return <HelloWorld message=\\\"React Component Library!\\\" />\\n}\\n\"}]},{\"name\":\"Label\",\"description\":\"Label with required field display, htmlFor, and block styling\",\"props\":{\"htmlFor\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"HTML ID for associated input\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Label text\"},\"required\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Display asterisk after label if true\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** Label with required field display, htmlFor, and block styling */\\nfunction Label({ htmlFor, label, required }) {\\n  return (\\n    <label style={{ display: 'block' }} htmlFor={htmlFor}>\\n      {label} {required && <span style={{ color: 'red' }}> *</span>}\\n    </label>\\n  )\\n}\\n\\nLabel.propTypes = {\\n  /** HTML ID for associated input */\\n  htmlFor: PropTypes.string.isRequired,\\n\\n  /** Label text */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Display asterisk after label if true */\\n  required: PropTypes.bool\\n};\\n\\nexport default Label;\\n\",\"examples\":[{\"name\":\"ExampleOptional\",\"description\":\"Optional label\",\"code\":\"import React from 'react';\\nimport Label from 'reactjs-lib/Label';\\n\\n/** Optional label */\\nexport default function ExampleOptional() {\\n  return <Label htmlFor=\\\"test\\\" label=\\\"test\\\" />\\n}\\n\"},{\"name\":\"ExampleRequired\",\"description\":\"Required label\",\"code\":\"import React from 'react';\\nimport Label from 'reactjs-lib/Label';\\n\\n/** Required label */\\nexport default function ExampleRequired() {\\n  return <Label htmlFor=\\\"test\\\" label=\\\"test\\\" required />\\n}\\n\"}]},{\"name\":\"PasswordInput\",\"description\":\"Password input with integrated label, quality tips, and show password toggle.\",\"props\":{\"htmlId\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"},\"name\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input name. Recommend setting this to match object's property so a single change handler can be used by convention.\"},\"value\":{\"type\":{\"name\":\"any\"},\"required\":false,\"description\":\"Password value\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Input label\",\"defaultValue\":{\"value\":\"'Password'\",\"computed\":false}},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Function called when password input value changes\"},\"maxLength\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Max password length accepted\",\"defaultValue\":{\"value\":\"50\",\"computed\":false}},\"placeholder\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Placeholder displayed when no password is entered\"},\"showVisibilityToggle\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Set to true to show the toggle for displaying the currently entered password\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}},\"quality\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Display password quality visually via ProgressBar, accepts a number between 0 and 100\"},\"error\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Validation error to display\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport ProgressBar from '../ProgressBar';\\nimport EyeIcon from '../EyeIcon';\\nimport TextInput from '../TextInput';\\n\\n/** Password input with integrated label, quality tips, and show password toggle. */\\nclass PasswordInput extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      showPassword: false\\n    }\\n  }\\n\\n  toggleShowPassword = event => {\\n    this.setState(prevState => {\\n      return { showPassword: !prevState.showPassword };\\n    });\\n    if (event) event.preventDefault();\\n  }\\n\\n  render() {\\n    const {\\n      htmlId, value, label, error, onChange, placeholder, maxLength, showVisibilityToggle, quality, ...props\\n    } = this.props;\\n    const { showPassword } = this.state;\\n\\n    return (\\n      <TextInput\\n        htmlId={htmlId}\\n        label={label}\\n        placeholder={placeholder}\\n        type={showPassword ? 'text' : 'password'}\\n        onChange={onChange}\\n        value={value}\\n        maxLength={maxLength}\\n        error={error}\\n        required\\n        {...props}>\\n        {\\n          showVisibilityToggle &&\\n          <a\\n            href=\\\"\\\"\\n            onClick={this.toggleShowPassword}\\n            style={{ marginLeft: 5 }}>\\n            <EyeIcon />\\n          </a>\\n        }\\n        {\\n          value.length > 0 && quality && <ProgressBar percent={quality} width={130} />\\n        }\\n      </TextInput>\\n    );\\n  }\\n}\\n\\nPasswordInput.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n  htmlId: PropTypes.string.isRequired,\\n\\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used by convention.*/\\n  name: PropTypes.string.isRequired,\\n\\n  /** Password value */\\n  value: PropTypes.any,\\n\\n  /** Input label */\\n  label: PropTypes.string,\\n\\n  /** Function called when password input value changes */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Max password length accepted */\\n  maxLength: PropTypes.number,\\n\\n  /** Placeholder displayed when no password is entered */\\n  placeholder: PropTypes.string,\\n\\n  /** Set to true to show the toggle for displaying the currently entered password */\\n  showVisibilityToggle: PropTypes.bool,\\n\\n  /** Display password quality visually via ProgressBar, accepts a number between 0 and 100 */\\n  quality: PropTypes.number,\\n\\n  /** Validation error to display */\\n  error: PropTypes.string\\n};\\n\\nPasswordInput.defaultProps = {\\n  maxLength: 50,\\n  showVisibilityToggle: false,\\n  label: 'Password'\\n};\\n\\nexport default PasswordInput;\\n\",\"examples\":[{\"name\":\"ExampleAllFeatures\",\"description\":\"All features enabled\",\"code\":\"import React from 'react';\\nimport PasswordInput from 'reactjs-lib/PasswordInput';\\n\\n/** All features enabled */\\nclass ExampleAllFeatures extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      password: ''\\n    };\\n  }\\n\\n  getQuality() {\\n    const length = this.state.password.length;\\n    return length > 10 ? 100 : length * 10;\\n  }\\n\\n  render() {\\n    return (\\n      <div>\\n        <PasswordInput\\n          htmlId=\\\"password-input-example-all-features\\\"\\n          name=\\\"password\\\"\\n          onChange={event => this.setState({ password: event.target.value })}\\n          value={this.state.password}\\n          minLength={8}\\n          placeholder=\\\"Enter password\\\"\\n          showVisibilityToggle\\n          quality={this.getQuality()}\\n          {...this.props} />\\n      </div>\\n    )\\n  }\\n}\\n\\nexport default ExampleAllFeatures;\\n\"}]},{\"name\":\"PersonIcon\",\"description\":\"SVG Person Icon\",\"code\":\"import React from 'react';\\n\\n/** SVG Person Icon */\\nfunction PersonIcon() {\\n  return (\\n    <svg width=\\\"32\\\" height=\\\"32\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 24 24\\\">\\n      <path\\n        d=\\\"m17.466 16.914c-.159-.052-1.164-.505-.536-2.414h-.009c1.637-1.686 2.888-4.399 2.888-7.07 0-4.107-2.731-6.26-5.905-6.26-3.176 0-5.892 2.152-5.892 6.26 0 2.682 1.244 5.406 2.891 7.088.642 1.684-.506 2.309-.746 2.396-2.238.724-8.325 4.332-8.229 9.586h24.05c.107-5.02-4.708-8.279-8.513-9.586m19.943463-3.079141a23.455896 23.455898 0 0 1 -23.455894 23.455898 23.455896 23.455898 0 0 1 -23.455896 -23.455898 23.455896 23.455898 0 0 1 23.455896 -23.455898 23.455896 23.455898 0 0 1 23.455894 23.455898\\\"\\n        fill=\\\"#4d4d4d\\\" transform=\\\"matrix(.34107 0 0 .34107 7.23 7.278)\\\" />\\n    </svg>\\n  )\\n}\\n\\nexport default PersonIcon;\\n\",\"examples\":[{\"name\":\"Example\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport PersonIcon from 'reactjs-lib/PersonIcon';\\n\\nexport default function PersonIconExample() {\\n  return <PersonIcon />;\\n}\\n\"}]},{\"name\":\"ProgressBar\",\"description\":\"\",\"props\":{\"percent\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"Percent of progress completed\"},\"width\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"Bar width\"},\"height\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Bar height\",\"defaultValue\":{\"value\":\"5\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nclass ProgressBar extends React.Component {\\n  getColor = (percent) => {\\n    if (percent === 100) return 'green';\\n    return percent > 50 ? 'lightgreen' : 'red';\\n  }\\n\\n  getWidthAsPercentOfTotalWidth = () => {\\n    return parseInt(this.props.width * (this.props.percent / 100), 10);\\n  }\\n\\n  render() {\\n    const { percent, width, height } = this.props;\\n    return (\\n      <div style={{ border: 'solid 1px lightgray', width: width }}>\\n        <div style={{\\n          width: this.getWidthAsPercentOfTotalWidth(),\\n          height,\\n          backgroundColor: this.getColor(percent)\\n        }} />\\n      </div>\\n    );\\n  }\\n}\\n\\nProgressBar.propTypes = {\\n  /** Percent of progress completed */\\n  percent: PropTypes.number.isRequired,\\n\\n  /** Bar width */\\n  width: PropTypes.number.isRequired,\\n\\n  /** Bar height */\\n  height: PropTypes.number\\n};\\n\\nProgressBar.defaultProps = {\\n  height: 5\\n};\\n\\nexport default ProgressBar;\",\"examples\":[{\"name\":\"Example100Percent\",\"description\":\"100% progress and height 20px\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'reactjs-lib/ProgressBar';\\n\\n/** 100% progress and height 20px */\\nexport default function Example100Percent() {\\n  return <ProgressBar percent={100} width={150} height={20} />\\n}\\n\"},{\"name\":\"Example10Percent\",\"description\":\"10% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'reactjs-lib/ProgressBar';\\n\\n/** 10% progress */\\nexport default function Example10Percent() {\\n  return <ProgressBar percent={10} width={150} />\\n}\\n\"},{\"name\":\"Example70Percent\",\"description\":\"70% progress\",\"code\":\"import React from 'react';\\nimport ProgressBar from 'reactjs-lib/ProgressBar';\\n\\n/** 70% progress */\\nexport default function Example70Percent() {\\n  return <ProgressBar percent={70} width={150} />\\n}\\n\"}]},{\"name\":\"RegistrationForm\",\"description\":\"Registration form with built-in validation.\",\"props\":{\"confirmationMessage\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Message displayed upon successful submission\",\"defaultValue\":{\"value\":\"\\\"Thanks for registering!\\\"\",\"computed\":false}},\"onSubmit\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Called when form is submitted\"},\"minPasswordLength\":{\"type\":{\"name\":\"number\"},\"required\":false,\"description\":\"Minimum password length\",\"defaultValue\":{\"value\":\"8\",\"computed\":false}}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport TextInput from '../TextInput';\\nimport PasswordInput from '../PasswordInput';\\n\\n/** Registration form with built-in validation. */\\nclass RegistrationForm extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      user: {\\n        email: '',\\n        password: ''\\n      },\\n      errors: {},\\n      submitted: false,\\n    };\\n  }\\n\\n  onChange = (event) => {\\n    const user = this.state.user;\\n    user[event.target.name] = event.target.value;\\n    this.setState({ user });\\n  }\\n\\n  // Returns a number from 0 to 100 that represents password quality.\\n  // For simplicity, just returning % of min length entered.\\n  // Could enhance with checks for number, special char, unique characters, etc.\\n  passwordQuality(password) {\\n    if (!password) return null;\\n    if (password.length >= this.props.minPasswordLength) return 100;\\n    const percentOfMinLength = parseInt(password.length / this.props.minPasswordLength * 100, 10);\\n    return percentOfMinLength;\\n  }\\n\\n  validate({ email, password }) {\\n    const errors = {};\\n    const { minPasswordLength } = this.props;\\n\\n    if (!email) errors.email = 'Email required.';\\n    if (password.length < minPasswordLength)\\n      errors.password = `Password must be at least ${minPasswordLength} characters.`;\\n\\n    this.setState({ errors });\\n    const formIsValid = Object.getOwnPropertyNames(errors).length === 0;\\n    return formIsValid;\\n  }\\n\\n  onSubmit = () => {\\n    const { user } = this.state;\\n    const formIsValid = this.validate(user);\\n    if (formIsValid) {\\n      this.props.onSubmit(user);\\n      this.setState({ submitted: true });\\n    }\\n  }\\n\\n  render() {\\n    const { errors, submitted } = this.state;\\n    const { email, password } = this.state.user;\\n\\n    return (\\n      submitted ?\\n        <h2>{this.props.confirmationMessage}</h2> :\\n        <div>\\n          <TextInput\\n            htmlId=\\\"registration-form-email\\\"\\n            name=\\\"email\\\"\\n            onChange={this.onChange}\\n            label=\\\"Email\\\"\\n            value={email}\\n            error={errors.email}\\n            required />\\n\\n          <PasswordInput\\n            htmlId=\\\"registration-form-password\\\"\\n            name=\\\"password\\\"\\n            value={password}\\n            onChange={this.onChange}\\n            quality={this.passwordQuality(password)}\\n            showVisibilityToggle\\n            maxLength={50}\\n            error={errors.password} />\\n\\n          <input type=\\\"submit\\\" value=\\\"Register\\\" onClick={this.onSubmit} />\\n        </div>\\n    )\\n  }\\n}\\n\\nRegistrationForm.propTypes = {\\n  /** Message displayed upon successful submission */\\n  confirmationMessage: PropTypes.string,\\n\\n  /** Called when form is submitted */\\n  onSubmit: PropTypes.func.isRequired,\\n\\n  /** Minimum password length */\\n  minPasswordLength: PropTypes.number\\n}\\n\\nRegistrationForm.defaultProps = {\\n  confirmationMessage: \\\"Thanks for registering!\\\",\\n  minPasswordLength: 8\\n};\\n\\nexport default RegistrationForm;\\n\",\"examples\":[{\"name\":\"ExampleRegistrationForm\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport RegistrationForm from 'reactjs-lib/RegistrationForm';\\n\\nexport default class ExampleRegistrationForm extends React.Component {\\n  onSubmit = (user) => {\\n    console.log(user);\\n  }\\n\\n  render() {\\n    return <RegistrationForm onSubmit={this.onSubmit} />\\n  }\\n}\\n\"}]},{\"name\":\"SelectInput\",\"description\":\"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.\",\"props\":{\"htmlId\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"},\"name\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Recommend setting this to match object's property so a single change handler can be used.\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"label\"},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Function to call onChange\"},\"value\":{\"type\":{\"name\":\"union\",\"value\":[{\"name\":\"string\"},{\"name\":\"number\"}]},\"required\":false,\"description\":\"Value\"},\"error\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"String to display when error occurs\"},\"options\":{\"type\":{\"name\":\"array\"},\"required\":true,\"description\":\"options to display\"},\"defaultOption\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Default Value\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Label from '../Label';\\n\\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nconst SelectInput = ({\\n  htmlId, name, label, onChange, defaultOption, value, error, options }) => {\\n  return (\\n    <div className=\\\"form-group\\\">\\n      <Label htmlFor={htmlId ? htmlId : name} label={label} />\\n      <div className=\\\"field\\\">\\n        <select\\n          name={name}\\n          onChange={onChange}\\n          value={value}\\n          className=\\\"form-control\\\"\\n          style={error && { border: 'solid 1px red' }}>\\n          <option value={\\\"\\\"}>{defaultOption}</option>\\n          {options.map(option => {\\n            return (\\n              <option key={option.value} value={option.value}>\\n                {option.text}\\n              </option>\\n            );\\n          })}\\n        </select>\\n      </div>\\n      {error && <div className=\\\"error\\\" style={{ color: 'red' }}>{error}</div>}\\n    </div>\\n  );\\n};\\n\\nSelectInput.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n  htmlId: PropTypes.string,\\n\\n  /** Recommend setting this to match object's property so a single change handler can be used. */\\n  name: PropTypes.string.isRequired,\\n\\n  /** label */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Function to call onChange */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Value */\\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\\n\\n  /** String to display when error occurs */\\n  error: PropTypes.string,\\n\\n  /** options to display */\\n  // options: PropTypes.arrayOf(PropTypes.object),\\n  options: PropTypes.array.isRequired,\\n\\n  /** Default Value */\\n  defaultOption: PropTypes.string,\\n};\\n\\nexport default SelectInput;\\n\",\"examples\":[{\"name\":\"Example\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport SelectInput from 'reactjs-lib/SelectInput';\\n\\nexport default class Example extends React.Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      user: {\\n        selectField: ''\\n      },\\n      error: 'Select Field is required!',\\n    };\\n  }\\n\\n  onChange = (event) => {\\n    const { name, value } = event.target;\\n    this.setState({\\n      ...this.state,\\n      user: { ...this.state.user, [name]: value },\\n      error: null\\n    });\\n  }\\n\\n  render() {\\n    console.log(this.state.user);\\n    return (\\n      <SelectInput\\n        name=\\\"selectField\\\"\\n        label=\\\"Select Field\\\"\\n        value={this.state.user.selectField}\\n        defaultOption=\\\"Select Option\\\"\\n        options={\\n          [\\n            {\\n              value: 'option1',\\n              text: 'option 1'\\n            },\\n            {\\n              value: 'option2',\\n              text: 'option 2'\\n            },\\n            {\\n              value: 'option3',\\n              text: 'option 3'\\n            },\\n          ]}\\n        onChange={this.onChange}\\n        error={this.state.error}\\n      />\\n    );\\n  }\\n}\\n\"}]},{\"name\":\"TextInput\",\"description\":\"Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker.\",\"props\":{\"htmlId\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing.\"},\"name\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input name. Recommend setting this to match object's property so a single change handler can be used.\"},\"label\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Input label\"},\"type\":{\"type\":{\"name\":\"enum\",\"value\":[{\"value\":\"'text'\",\"computed\":false},{\"value\":\"'number'\",\"computed\":false},{\"value\":\"'password'\",\"computed\":false}]},\"required\":false,\"description\":\"Input type\",\"defaultValue\":{\"value\":\"\\\"text\\\"\",\"computed\":false}},\"required\":{\"type\":{\"name\":\"bool\"},\"required\":false,\"description\":\"Mark label with asterisk if set to true\",\"defaultValue\":{\"value\":\"false\",\"computed\":false}},\"onChange\":{\"type\":{\"name\":\"func\"},\"required\":true,\"description\":\"Function to call onChange\"},\"placeholder\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"Placeholder to display when empty\"},\"value\":{\"type\":{\"name\":\"any\"},\"required\":false,\"description\":\"Value\"},\"error\":{\"type\":{\"name\":\"string\"},\"required\":false,\"description\":\"String to display when error occurs\"},\"children\":{\"type\":{\"name\":\"node\"},\"required\":false,\"description\":\"Child component to display next to the input\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport Label from '../Label';\\n\\n/** Text input with integrated label to enforce consistency in layout, error display, label placement, and required field marker. */\\nconst TextInput = ({\\n  htmlId, name, label, type = \\\"text\\\", required = false,\\n  onChange, placeholder, value, error, children, ...props }) => {\\n\\n  let wrapperClass = \\\"form-group\\\";\\n  if (error && error.length > 0) {\\n    wrapperClass.concat(\\\" has-error\\\");\\n  }\\n\\n  return (\\n    <div className={wrapperClass}>\\n      <Label htmlFor={htmlId ? htmlId : name} label={label} required={required} />\\n      <input\\n        id={htmlId}\\n        type={type}\\n        name={name}\\n        className=\\\"form-control\\\"\\n        placeholder={placeholder}\\n        value={value}\\n        onChange={onChange}\\n        style={error && { border: 'solid 1px red' }}\\n        {...props} />\\n      {children}\\n      {error && <div className=\\\"error\\\" style={{ color: 'red' }}>{error}</div>}\\n    </div>\\n  );\\n};\\n\\nTextInput.propTypes = {\\n  /** Unique HTML ID. Used for tying label to HTML input. Handy hook for automated testing. */\\n  htmlId: PropTypes.string,\\n\\n  /** Input name. Recommend setting this to match object's property so a single change handler can be used. */\\n  name: PropTypes.string.isRequired,\\n\\n  /** Input label */\\n  label: PropTypes.string.isRequired,\\n\\n  /** Input type */\\n  type: PropTypes.oneOf(['text', 'number', 'password']),\\n\\n  /** Mark label with asterisk if set to true */\\n  required: PropTypes.bool,\\n\\n  /** Function to call onChange */\\n  onChange: PropTypes.func.isRequired,\\n\\n  /** Placeholder to display when empty */\\n  placeholder: PropTypes.string,\\n\\n  /** Value */\\n  value: PropTypes.any,\\n\\n  /** String to display when error occurs */\\n  error: PropTypes.string,\\n\\n  /** Child component to display next to the input */\\n  children: PropTypes.node\\n};\\n\\nexport default TextInput;\\n\",\"examples\":[{\"name\":\"ExampleError\",\"description\":\"Required TextBox with error\",\"code\":\"import React from 'react';\\nimport TextInput from 'reactjs-lib/TextInput';\\n\\n/** Required TextBox with error */\\nexport default class ExampleError extends React.Component {\\n  render() {\\n    return (\\n      <TextInput\\n        htmlId=\\\"example-optional\\\"\\n        label=\\\"First Name\\\"\\n        name=\\\"firstname\\\"\\n        onChange={() => { }}\\n        required\\n        error=\\\"First name is required.\\\"\\n      />\\n    )\\n  }\\n}\\n\"},{\"name\":\"ExampleOptional\",\"description\":\"Optional TextBox\",\"code\":\"import React from 'react';\\nimport TextInput from 'reactjs-lib/TextInput';\\n\\n/** Optional TextBox */\\nexport default class ExampleOptional extends React.Component {\\n  render() {\\n    return (\\n      <TextInput\\n        htmlId=\\\"example-optional\\\"\\n        label=\\\"First Name\\\"\\n        name=\\\"firstname\\\"\\n        onChange={() => { }}\\n      />\\n    )\\n  }\\n}\\n\"}]}]"],"sourceRoot":""}